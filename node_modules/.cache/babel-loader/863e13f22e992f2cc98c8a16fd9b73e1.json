{"ast":null,"code":"import _classCallCheck from\"/home/kakashi/Desktop/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kakashi/Desktop/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/kakashi/Desktop/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/kakashi/Desktop/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/kakashi/Desktop/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{randomWord}from'./words';import\"./Hangman.css\";import\"./Level.css\";import img0 from\"./img/0.jpg\";import img1 from\"./img/1.jpg\";import img2 from\"./img/2.jpg\";import img3 from\"./img/3.jpg\";import img4 from\"./img/4.jpg\";import img5 from\"./img/5.jpg\";import img6 from\"./img/6.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Hangman=/*#__PURE__*/function(_Component){_inherits(Hangman,_Component);var _super=_createSuper(Hangman);/** by default, allow 6 guesses and use provided gallows images. */function Hangman(props){var _this;_classCallCheck(this,Hangman);_this=_super.call(this,props);_this.state={nWrong:0,guessed:new Set(),answer:randomWord(),l1:false,l2:false,l3:false};_this.handleGuess=_this.handleGuess.bind(_assertThisInitialized(_this));_this.resett=_this.resett.bind(_assertThisInitialized(_this));_this.level1=_this.level1.bind(_assertThisInitialized(_this));_this.level2=_this.level2.bind(_assertThisInitialized(_this));_this.level3=_this.level3.bind(_assertThisInitialized(_this));return _this;}/** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */_createClass(Hangman,[{key:\"guessedWord\",value:function guessedWord(){var _this2=this;return this.state.answer.split(\"\").map(function(ltr){return _this2.state.guessed.has(ltr)?ltr:\"_\";});}},{key:\"resett\",value:function resett(){this.setState({guessed:new Set(),nWrong:0,answer:randomWord()});}/** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */},{key:\"handleGuess\",value:function handleGuess(evt){var ltr=evt.target.value;this.setState(function(st){return{guessed:st.guessed.add(ltr),nWrong:st.nWrong+(st.answer.includes(ltr)?0:1)};});}/** generateButtons: return array of letter buttons to render */},{key:\"generateButtons\",value:function generateButtons(){var _this3=this;return\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(function(ltr){return/*#__PURE__*/_jsx(\"button\",{value:ltr,onClick:_this3.handleGuess,disabled:_this3.state.guessed.has(ltr),children:ltr},ltr);});}//level1\n},{key:\"level1\",value:function level1(){var rand1=Math.floor(Math.random()*5);var rand2=rand1;while(rand1===rand2){rand2=Math.floor(Math.random()*5);}var ltr1=this.state.answer[rand1];// let ltr1=this.state.answer[rand1];\nvar ltr2=this.state.answer[rand2];var set1=new Set([ltr1,ltr2]);this.setState(function(st){return{guessed:set1,l1:true};});}},{key:\"level2\",value:function level2(){var rand1=Math.floor(Math.random()*5);var ltr1=this.state.answer[rand1];this.setState(function(st){return{guessed:st.guessed.add(ltr1),l2:true};});}},{key:\"level3\",value:function level3(){this.setState({l3:true});}/** render: render game */},{key:\"render\",value:function render(){var val=\"\".concat(this.state.nWrong,\" out of 6\");var flag=true;for(var i=0;i<this.state.answer.length;i++){if(this.state.guessed.has(this.state.answer[i]))flag=true;else{flag=false;break;}}if(this.state.l3||this.state.l2||this.state.l1){return/*#__PURE__*/_jsxs(\"div\",{className:\"Hangman\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hangman\"}),/*#__PURE__*/_jsx(\"img\",{src:this.props.images[this.state.nWrong],alt:val}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wrong guessed : \",this.state.nWrong]}),this.state.nWrong===6?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-word\",children:this.state.answer}),/*#__PURE__*/_jsx(\"h1\",{children:\"You Loose! \"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-word\",children:this.guessedWord()}),flag===true?/*#__PURE__*/_jsx(\"h1\",{children:\"You WIN\"}):/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-btns\",children:this.generateButtons()})]}),/*#__PURE__*/_jsx(\"button\",{id:\"reset\",onClick:this.resett,children:flag===true?\"Re-start\":\"Reset\"})]});}//leve2\n// this is for intaial page that show button of level\nelse{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"game-button green\",onClick:this.level1,children:\"Level-1\"}),/*#__PURE__*/_jsx(\"button\",{className:\"game-button orange\",onClick:this.level2,children:\"Level-2\"}),/*#__PURE__*/_jsx(\"button\",{className:\"game-button red\",onClick:this.level3,children:\"Level-3\"})]});}}}]);return Hangman;}(Component);Hangman.defaultProps={maxWrong:6,images:[img0,img1,img2,img3,img4,img5,img6]};export default Hangman;","map":{"version":3,"sources":["/home/kakashi/Desktop/Hangman-game/src/Hangman.js"],"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","img6","Hangman","props","state","nWrong","guessed","Set","answer","l1","l2","l3","handleGuess","bind","resett","level1","level2","level3","split","map","ltr","has","setState","evt","target","value","st","add","includes","rand1","Math","floor","random","rand2","ltr1","ltr2","set1","val","flag","i","length","images","guessedWord","generateButtons","defaultProps","maxWrong"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { randomWord } from './words';\n\nimport \"./Hangman.css\";\nimport \"./Level.css\"\nimport img0 from \"./img/0.jpg\";\nimport img1 from \"./img/1.jpg\";\nimport img2 from \"./img/2.jpg\";\nimport img3 from \"./img/3.jpg\";\nimport img4 from \"./img/4.jpg\";\nimport img5 from \"./img/5.jpg\";\nimport img6 from \"./img/6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  static defaultProps = {\n    maxWrong: 6,\n    images: [img0, img1, img2, img3, img4, img5, img6]\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { nWrong: 0, guessed: new Set(), answer: randomWord(),l1 : false,l2 : false,l3: false };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.resett = this.resett.bind(this);\n    this.level1 = this.level1.bind(this);\n    this.level2 = this.level2.bind(this);\n    this.level3 = this.level3.bind(this);\n\n  }\n\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n  guessedWord() {\n    \n    return this.state.answer\n      .split(\"\")\n      .map(ltr => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n  }\n   \n  resett() {\n    this.setState({\n      guessed: new Set(),\n      nWrong: 0,\n      answer: randomWord()\n    });\n    \n  }\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n\n  /** generateButtons: return array of letter buttons to render */\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => (\n      <button\n        key={ltr}\n        value={ltr}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ));\n  }\n  //level1\n  level1(){\n    let rand1=Math.floor(Math.random()*5);\n    let rand2=rand1;\n    while(rand1===rand2)\n    {\n      rand2=Math.floor(Math.random()*5);\n    }\n    let ltr1=this.state.answer[rand1];\n    // let ltr1=this.state.answer[rand1];\n     let ltr2=this.state.answer[rand2];\n    let set1=new Set([ltr1,ltr2]);\n    this.setState(st=>({\n      guessed: set1,\n      l1 : true\n    }));\n\n  }\n  level2(){\n    let rand1=Math.floor(Math.random()*5);\n    let ltr1=this.state.answer[rand1];\n\n    this.setState(st=>({\n      guessed: st.guessed.add(ltr1),\n      l2 : true\n    }));\n  }\n\n  level3(){\n    this.setState({l3 : true});\n  }\n  /** render: render game */\n  render() {\n    const val=`${this.state.nWrong} out of 6`;\n    let flag=true;\n     for(let i=0;i<this.state.answer.length;i++)\n     {\n      if(this.state.guessed.has(this.state.answer[i])) \n      flag= true;\n      else \n      {\n        flag=false;\n        break;\n      } \n     }\n    if(this.state.l3 || this.state.l2 || this.state.l1)\n     {\n    return (\n      <div className='Hangman'>\n        \n        <h1>Hangman</h1>\n        <img src={this.props.images[this.state.nWrong]}  alt={val} />\n        \n        <p>Wrong guessed : {this.state.nWrong}</p>\n        {\n        this.state.nWrong===6 ? \n        <div>\n          <p className='Hangman-word'>{this.state.answer}</p>\n          <h1>You Loose! </h1>\n        </div> : \n        <div>\n        <p className='Hangman-word'>{this.guessedWord()}</p>\n        {flag===true ? <h1>You WIN</h1>:<p className='Hangman-btns'>{this.generateButtons()}</p>} \n        </div>\n        }\n        <button id=\"reset\" onClick={this.resett}>{flag===true?\"Re-start\":\"Reset\"}</button>\n      </div>\n    );\n  }\n\n  //leve2\n \n  // this is for intaial page that show button of level\n  else {\n    return(\n      <div>\n      <button className=\"game-button green\" onClick={this.level1}>Level-1</button>\n      <button className=\"game-button orange\" onClick={this.level2}>Level-2</button>\n      <button className=\"game-button red\" onClick={this.level3}>Level-3</button>\n      </div>\n    );\n  }\n}\n\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}