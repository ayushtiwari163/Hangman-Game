{"ast":null,"code":"import _classCallCheck from\"/home/kakashi/hangman-game/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kakashi/hangman-game/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/kakashi/hangman-game/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/kakashi/hangman-game/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/kakashi/hangman-game/Hangman-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{randomWord}from'./words';import\"./Hangman.css\";import img0 from\"./img/0.jpg\";import img1 from\"./img/1.jpg\";import img2 from\"./img/2.jpg\";import img3 from\"./img/3.jpg\";import img4 from\"./img/4.jpg\";import img5 from\"./img/5.jpg\";import img6 from\"./img/6.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Hangman=/*#__PURE__*/function(_Component){_inherits(Hangman,_Component);var _super=_createSuper(Hangman);/** by default, allow 6 guesses and use provided gallows images. */function Hangman(props){var _this;_classCallCheck(this,Hangman);_this=_super.call(this,props);_this.state={nWrong:0,guessed:new Set(),answer:randomWord()};_this.handleGuess=_this.handleGuess.bind(_assertThisInitialized(_this));_this.resett=_this.resett.bind(_assertThisInitialized(_this));return _this;}/** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */_createClass(Hangman,[{key:\"guessedWord\",value:function guessedWord(){var _this2=this;return this.state.answer.split(\"\").map(function(ltr){return _this2.state.guessed.has(ltr)?ltr:\"_\";});}},{key:\"resett\",value:function resett(){this.setState({guessed:new Set(),nWrong:0,answer:randomWord()});}/** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */},{key:\"handleGuess\",value:function handleGuess(evt){var ltr=evt.target.value;this.setState(function(st){return{guessed:st.guessed.add(ltr),nWrong:st.nWrong+(st.answer.includes(ltr)?0:1)};});}/** generateButtons: return array of letter buttons to render */},{key:\"generateButtons\",value:function generateButtons(){var _this3=this;return\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(function(ltr){return/*#__PURE__*/_jsx(\"button\",{value:ltr,onClick:_this3.handleGuess,disabled:_this3.state.guessed.has(ltr),children:ltr},ltr);});}/** render: render game */},{key:\"render\",value:function render(){var val=\"\".concat(this.state.nWrong,\" out of 6\");var flag=true;for(var i=0;i<this.state.answer.length;i++){if(this.state.guessed.has(this.state.answer[i]))flag=true;else{flag=false;break;}}console.log(flag);return/*#__PURE__*/_jsxs(\"div\",{className:\"Hangman\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hangman\"}),/*#__PURE__*/_jsx(\"img\",{src:this.props.images[this.state.nWrong],alt:val}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wrong guessed : \",this.state.nWrong]}),this.state.nWrong===6?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-word\",children:this.state.answer}),/*#__PURE__*/_jsx(\"h1\",{children:\"You Loose! \"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-word\",children:this.guessedWord()}),flag===true?/*#__PURE__*/_jsx(\"h1\",{children:\"You WIN\"}):/*#__PURE__*/_jsx(\"p\",{className:\"Hangman-btns\",children:this.generateButtons()})]}),/*#__PURE__*/_jsx(\"button\",{id:\"reset\",onClick:this.resett,children:flag===true?\"Re-start\":\"Reset\"})]});}}]);return Hangman;}(Component);Hangman.defaultProps={maxWrong:6,images:[img0,img1,img2,img3,img4,img5,img6]};export default Hangman;","map":{"version":3,"sources":["/home/kakashi/hangman-game/Hangman-game/src/Hangman.js"],"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","img6","Hangman","props","state","nWrong","guessed","Set","answer","handleGuess","bind","resett","split","map","ltr","has","setState","evt","target","value","st","add","includes","val","flag","i","length","console","log","images","guessedWord","generateButtons","defaultProps","maxWrong"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { randomWord } from './words';\n\nimport \"./Hangman.css\";\nimport img0 from \"./img/0.jpg\";\nimport img1 from \"./img/1.jpg\";\nimport img2 from \"./img/2.jpg\";\nimport img3 from \"./img/3.jpg\";\nimport img4 from \"./img/4.jpg\";\nimport img5 from \"./img/5.jpg\";\nimport img6 from \"./img/6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  static defaultProps = {\n    maxWrong: 6,\n    images: [img0, img1, img2, img3, img4, img5, img6]\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { nWrong: 0, guessed: new Set(), answer: randomWord() };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.resett = this.resett.bind(this);\n  }\n\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n  guessedWord() {\n    \n    return this.state.answer\n      .split(\"\")\n      .map(ltr => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n  }\n   \n  resett() {\n    this.setState({\n      guessed: new Set(),\n      nWrong: 0,\n      answer: randomWord()\n    });\n    \n  }\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n\n  /** generateButtons: return array of letter buttons to render */\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => (\n      <button\n        key={ltr}\n        value={ltr}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ));\n  }\n  /** render: render game */\n  render() {\n    const val=`${this.state.nWrong} out of 6`;\n    let flag=true;\n     for(let i=0;i<this.state.answer.length;i++)\n     {\n      if(this.state.guessed.has(this.state.answer[i])) \n      flag= true;\n      else \n      {\n        flag=false;\n        break;\n      } \n     }\n    console.log(flag);\n    return (\n      <div className='Hangman'>\n        \n        <h1>Hangman</h1>\n        <img src={this.props.images[this.state.nWrong]}  alt={val} />\n        \n        <p>Wrong guessed : {this.state.nWrong}</p>\n        {\n        this.state.nWrong===6 ? \n        <div>\n          <p className='Hangman-word'>{this.state.answer}</p>\n          <h1>You Loose! </h1>\n        </div> : \n        <div>\n        <p className='Hangman-word'>{this.guessedWord()}</p>\n        {flag===true ? <h1>You WIN</h1>:<p className='Hangman-btns'>{this.generateButtons()}</p>} \n        </div>\n        }\n        <button id=\"reset\" onClick={this.resett}>{flag===true?\"Re-start\":\"Reset\"}</button>\n      </div>\n    );\n  }\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}