{"ast":null,"code":"var _jsxFileName = \"/home/kakashi/Desktop/Hangman-game/src/Hangman.js\";\nimport React, { Component } from \"react\";\nimport { randomWord } from './words';\nimport \"./Hangman.css\";\nimport img0 from \"./img/0.jpg\";\nimport img1 from \"./img/1.jpg\";\nimport img2 from \"./img/2.jpg\";\nimport img3 from \"./img/3.jpg\";\nimport img4 from \"./img/4.jpg\";\nimport img5 from \"./img/5.jpg\";\nimport img6 from \"./img/6.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  constructor(props) {\n    super(props);\n    this.state = {\n      nWrong: 0,\n      guessed: new Set(),\n      answer: randomWord(),\n      l1: false,\n      l2: false,\n      l3: false\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.resett = this.resett.bind(this);\n  }\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(ltr => this.state.guessed.has(ltr) ? ltr : \"_\");\n  }\n\n  resett() {\n    this.setState({\n      guessed: new Set(),\n      nWrong: 0,\n      answer: randomWord()\n    });\n  }\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n\n\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n  /** generateButtons: return array of letter buttons to render */\n\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => /*#__PURE__*/_jsxDEV(\"button\", {\n      value: ltr,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(ltr),\n      children: ltr\n    }, ltr, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this));\n  }\n  /** render: render game */\n\n\n  render() {\n    const val = `${this.state.nWrong} out of 6`;\n    let flag = true;\n\n    for (let i = 0; i < this.state.answer.length; i++) {\n      if (this.state.guessed.has(this.state.answer[i])) flag = true;else {\n        flag = false;\n        break;\n      }\n    }\n\n    if (this.state.l3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Hangman\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hangman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.images[this.state.nWrong],\n          alt: val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wrong guessed : \", this.state.nWrong]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), this.state.nWrong === 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Hangman-word\",\n            children: this.state.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"You Loose! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Hangman-word\",\n            children: this.guessedWord()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this), flag === true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"You WIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Hangman-btns\",\n            children: this.generateButtons()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reset\",\n          onClick: this.resett,\n          children: flag === true ? \"Re-start\" : \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this);\n    } // this is for intaial page that show button of level\n    else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"level-1\",\n          children: \"Level-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this);\n      }\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [img0, img1, img2, img3, img4, img5, img6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/home/kakashi/Desktop/Hangman-game/src/Hangman.js"],"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","img6","Hangman","constructor","props","state","nWrong","guessed","Set","answer","l1","l2","l3","handleGuess","bind","resett","guessedWord","split","map","ltr","has","setState","evt","target","value","st","add","includes","generateButtons","render","val","flag","i","length","images","defaultProps","maxWrong"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { randomWord } from './words';\n\nimport \"./Hangman.css\";\nimport img0 from \"./img/0.jpg\";\nimport img1 from \"./img/1.jpg\";\nimport img2 from \"./img/2.jpg\";\nimport img3 from \"./img/3.jpg\";\nimport img4 from \"./img/4.jpg\";\nimport img5 from \"./img/5.jpg\";\nimport img6 from \"./img/6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  static defaultProps = {\n    maxWrong: 6,\n    images: [img0, img1, img2, img3, img4, img5, img6]\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { nWrong: 0, guessed: new Set(), answer: randomWord(),l1 : false,l2 : false,l3: false };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.resett = this.resett.bind(this);\n  }\n\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n  guessedWord() {\n    \n    return this.state.answer\n      .split(\"\")\n      .map(ltr => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n  }\n   \n  resett() {\n    this.setState({\n      guessed: new Set(),\n      nWrong: 0,\n      answer: randomWord()\n    });\n    \n  }\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n\n  /** generateButtons: return array of letter buttons to render */\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => (\n      <button\n        key={ltr}\n        value={ltr}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ));\n  }\n  /** render: render game */\n  render() {\n    const val=`${this.state.nWrong} out of 6`;\n    let flag=true;\n     for(let i=0;i<this.state.answer.length;i++)\n     {\n      if(this.state.guessed.has(this.state.answer[i])) \n      flag= true;\n      else \n      {\n        flag=false;\n        break;\n      } \n     }\n    if(this.state.l3)\n     {\n    return (\n      <div className='Hangman'>\n        \n        <h1>Hangman</h1>\n        <img src={this.props.images[this.state.nWrong]}  alt={val} />\n        \n        <p>Wrong guessed : {this.state.nWrong}</p>\n        {\n        this.state.nWrong===6 ? \n        <div>\n          <p className='Hangman-word'>{this.state.answer}</p>\n          <h1>You Loose! </h1>\n        </div> : \n        <div>\n        <p className='Hangman-word'>{this.guessedWord()}</p>\n        {flag===true ? <h1>You WIN</h1>:<p className='Hangman-btns'>{this.generateButtons()}</p>} \n        </div>\n        }\n        <button id=\"reset\" onClick={this.resett}>{flag===true?\"Re-start\":\"Reset\"}</button>\n      </div>\n    );\n  }\n  // this is for intaial page that show button of level\n  else {\n    return(\n     <button id=\"level-1\">Level-1</button>\n    );\n  }\n}\n\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}